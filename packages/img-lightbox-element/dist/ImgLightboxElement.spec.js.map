{"version":3,"file":"ImgLightboxElement.spec.js","sources":["../src/ImgLightboxElement.spec.ts"],"sourcesContent":["/// <reference types=\"@types/chai\" />\n/// <reference types=\"@types/mocha\" />\n\nimport type ImgLightboxElement from \"./ImgLightboxElement\";\nimport svg1 from \"../examples/1.svg\";\nimport svg2 from \"../examples/2.svg\";\nimport svg3 from \"../examples/3.svg\";\n\ndeclare const assert: Chai.AssertStatic;\n\ndescribe(\"img-lightbox\", () => {\n\tlet imgLightboxElement: ImgLightboxElement;\n\tlet dialogElement: HTMLDialogElement;\n\tlet closeButtonElement: HTMLButtonElement;\n\tlet imgElement: HTMLImageElement;\n\tlet currentSpanElement: HTMLSpanElement;\n\tlet previousButtonElement: HTMLButtonElement;\n\tlet nextButtonElement: HTMLButtonElement;\n\tlet imgElements: HTMLImageElement[];\n\n\tbeforeEach(async () => {\n\t\t// Create lightbox element and append to body\n\t\timgLightboxElement = document.createElement(\n\t\t\t\"img-lightbox\"\n\t\t) as ImgLightboxElement;\n\t\tdocument.body.appendChild(imgLightboxElement);\n\n\t\timgElements = new Array(3);\n\n\t\timgElements[0] = document.createElement(\"img\");\n\t\timgElements[0].src =\n\t\t\t\"data:image/svg+xml;charset=utf-8,\" + encodeURI(svg1);\n\t\timgLightboxElement.appendChild(imgElements[0]);\n\n\t\timgElements[1] = document.createElement(\"img\");\n\t\timgElements[1].src =\n\t\t\t\"data:image/svg+xml;charset=utf-8,\" + encodeURI(svg2);\n\t\timgLightboxElement.appendChild(imgElements[1]);\n\n\t\timgElements[2] = document.createElement(\"img\");\n\t\timgElements[2].src =\n\t\t\t\"data:image/svg+xml;charset=utf-8,\" + encodeURI(svg3);\n\t\timgLightboxElement.appendChild(imgElements[2]);\n\n\t\tdialogElement = imgLightboxElement.shadowRoot!.querySelector(\"dialog\")!;\n\t\tcloseButtonElement = imgLightboxElement.shadowRoot!.querySelector(\n\t\t\t\"button[part*=close]\"\n\t\t)!;\n\t\timgElement = imgLightboxElement.shadowRoot!.querySelector(\"img\")!;\n\t\tcurrentSpanElement =\n\t\t\timgLightboxElement.shadowRoot!.querySelector(\"span#current\")!;\n\t\tpreviousButtonElement = imgLightboxElement.shadowRoot!.querySelector(\n\t\t\t\"button[part*=previous]\"\n\t\t)!;\n\t\tnextButtonElement =\n\t\t\timgLightboxElement.shadowRoot!.querySelector(\"button[part*=next]\")!;\n\t});\n\n\tafterEach(async () => {\n\t\t// Clean up\n\t\timgLightboxElement.remove();\n\t});\n\n\tit(\"starts closed\", async () => {\n\t\tassert.isFalse(dialogElement.open);\n\t});\n\n\tit(\"opens when slotted `img` is clicked\", async () => {\n\t\timgElements[0].click();\n\t\tassert.isTrue(dialogElement.open);\n\t});\n\n\tit(\"closes when closed button is clicked\", async () => {\n\t\timgElements[0].click();\n\t\tcloseButtonElement.click();\n\t\tassert.isFalse(dialogElement.open);\n\t});\n\n\tit(\"opens the correct image\", async () => {\n\t\timgElements[1].click();\n\t\tassert.equal(imgElement.src, imgElements[1].src);\n\t\tassert.equal(currentSpanElement.textContent, \"2\");\n\t});\n\n\tit(\"goes to the next image\", async () => {\n\t\timgElements[0].click();\n\t\tnextButtonElement.click();\n\t\tassert.equal(imgElement.src, imgElements[1].src);\n\t\tassert.equal(currentSpanElement.textContent, \"2\");\n\t});\n\n\tit(\"goes to the previous image\", async () => {\n\t\timgElements[1].click();\n\t\tpreviousButtonElement.click();\n\t\tassert.equal(imgElement.src, imgElements[0].src);\n\t\tassert.equal(currentSpanElement.textContent, \"1\");\n\t});\n\n\tit(\"wraps to the last image\", async () => {\n\t\timgElements[0].click();\n\t\tpreviousButtonElement.click();\n\t\tassert.equal(imgElement.src, imgElements[imgElements.length - 1].src);\n\t\tassert.equal(currentSpanElement.textContent, \"3\");\n\t});\n\n\tit(\"wraps to the first image\", async () => {\n\t\timgElements[imgElements.length - 1].click();\n\t\tnextButtonElement.click();\n\t\tassert.equal(imgElement.src, imgElements[0].src);\n\t\tassert.equal(currentSpanElement.textContent, \"1\");\n\t});\n});\n"],"names":["imgLightboxElement","dialogElement","closeButtonElement","imgElement","currentSpanElement","previousButtonElement","nextButtonElement","imgElements","svg1","svg2","svg3"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAUA,SAAS,eAAgB,IAAM,CAC9B,IAAIA,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,WAAW,SAAY,CAEtBP,EAAqB,SAAS,cAC7B,cACD,EACA,SAAS,KAAK,YAAYA,CAAkB,EAE5CO,EAAc,IAAI,MAAM,CAAC,EAEzBA,EAAY,GAAK,SAAS,cAAc,KAAK,EAC7CA,EAAY,GAAG,IACd,oCAAsC,UAAUC,CAAI,EACrDR,EAAmB,YAAYO,EAAY,EAAE,EAE7CA,EAAY,GAAK,SAAS,cAAc,KAAK,EAC7CA,EAAY,GAAG,IACd,oCAAsC,UAAUE,CAAI,EACrDT,EAAmB,YAAYO,EAAY,EAAE,EAE7CA,EAAY,GAAK,SAAS,cAAc,KAAK,EAC7CA,EAAY,GAAG,IACd,oCAAsC,UAAUG,CAAI,EACrDV,EAAmB,YAAYO,EAAY,EAAE,EAE7CN,EAAgBD,EAAmB,WAAY,cAAc,QAAQ,EACrEE,EAAqBF,EAAmB,WAAY,cACnD,qBACD,EACAG,EAAaH,EAAmB,WAAY,cAAc,KAAK,EAC/DI,EACCJ,EAAmB,WAAY,cAAc,cAAc,EAC5DK,EAAwBL,EAAmB,WAAY,cACtD,wBACD,EACAM,EACCN,EAAmB,WAAY,cAAc,oBAAoB,CACnE,CAAC,EAED,UAAU,SAAY,CAErBA,EAAmB,OACpB,CAAA,CAAC,EAED,GAAG,gBAAiB,SAAY,CAC/B,OAAO,QAAQC,EAAc,IAAI,CAClC,CAAC,EAED,GAAG,sCAAuC,SAAY,CACrDM,EAAY,GAAG,MACf,EAAA,OAAO,OAAON,EAAc,IAAI,CACjC,CAAC,EAED,GAAG,uCAAwC,SAAY,CACtDM,EAAY,GAAG,QACfL,EAAmB,MAAM,EACzB,OAAO,QAAQD,EAAc,IAAI,CAClC,CAAC,EAED,GAAG,0BAA2B,SAAY,CACzCM,EAAY,GAAG,MAAM,EACrB,OAAO,MAAMJ,EAAW,IAAKI,EAAY,GAAG,GAAG,EAC/C,OAAO,MAAMH,EAAmB,YAAa,GAAG,CACjD,CAAC,EAED,GAAG,yBAA0B,SAAY,CACxCG,EAAY,GAAG,MAAA,EACfD,EAAkB,QAClB,OAAO,MAAMH,EAAW,IAAKI,EAAY,GAAG,GAAG,EAC/C,OAAO,MAAMH,EAAmB,YAAa,GAAG,CACjD,CAAC,EAED,GAAG,6BAA8B,SAAY,CAC5CG,EAAY,GAAG,MAAM,EACrBF,EAAsB,MAAM,EAC5B,OAAO,MAAMF,EAAW,IAAKI,EAAY,GAAG,GAAG,EAC/C,OAAO,MAAMH,EAAmB,YAAa,GAAG,CACjD,CAAC,EAED,GAAG,0BAA2B,SAAY,CACzCG,EAAY,GAAG,QACfF,EAAsB,MAAM,EAC5B,OAAO,MAAMF,EAAW,IAAKI,EAAYA,EAAY,OAAS,GAAG,GAAG,EACpE,OAAO,MAAMH,EAAmB,YAAa,GAAG,CACjD,CAAC,EAED,GAAG,2BAA4B,SAAY,CAC1CG,EAAYA,EAAY,OAAS,GAAG,QACpCD,EAAkB,QAClB,OAAO,MAAMH,EAAW,IAAKI,EAAY,GAAG,GAAG,EAC/C,OAAO,MAAMH,EAAmB,YAAa,GAAG,CACjD,CAAC,CACF,CAAC"}